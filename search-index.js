var searchIndex = {};
searchIndex["lcms2"] = {"doc":"See Little CMS full documentation for more in-depth information about LCMS functions.","items":[[3,"CIEXYZ","lcms2","",null,null],[12,"X","","",0,null],[12,"Y","","",0,null],[12,"Z","","",0,null],[3,"CIELab","","",null,null],[12,"L","","",1,null],[12,"a","","",1,null],[12,"b","","",1,null],[4,"PixelFormat","","Format of pixel is defined by one cmsUInt32Number, using bit fields as follows",null,null],[13,"GRAY_8","","",2,null],[13,"GRAY_8_REV","","",2,null],[13,"GRAY_16","","",2,null],[13,"GRAY_16_REV","","",2,null],[13,"GRAY_16_SE","","",2,null],[13,"GRAYA_8","","",2,null],[13,"GRAYA_16","","",2,null],[13,"GRAYA_16_SE","","",2,null],[13,"GRAYA_8_PLANAR","","",2,null],[13,"GRAYA_16_PLANAR","","",2,null],[13,"RGB_8","","",2,null],[13,"RGB_8_PLANAR","","",2,null],[13,"BGR_8","","",2,null],[13,"BGR_8_PLANAR","","",2,null],[13,"RGB_16","","",2,null],[13,"RGB_16_PLANAR","","",2,null],[13,"RGB_16_SE","","",2,null],[13,"BGR_16","","",2,null],[13,"BGR_16_PLANAR","","",2,null],[13,"BGR_16_SE","","",2,null],[13,"RGBA_8","","",2,null],[13,"RGBA_8_PLANAR","","",2,null],[13,"RGBA_16","","",2,null],[13,"RGBA_16_PLANAR","","",2,null],[13,"RGBA_16_SE","","",2,null],[13,"ARGB_8","","",2,null],[13,"ARGB_8_PLANAR","","",2,null],[13,"ARGB_16","","",2,null],[13,"ABGR_8","","",2,null],[13,"ABGR_8_PLANAR","","",2,null],[13,"ABGR_16","","",2,null],[13,"ABGR_16_PLANAR","","",2,null],[13,"ABGR_16_SE","","",2,null],[13,"BGRA_8","","",2,null],[13,"BGRA_8_PLANAR","","",2,null],[13,"BGRA_16","","",2,null],[13,"BGRA_16_SE","","",2,null],[13,"CMY_8","","",2,null],[13,"CMY_8_PLANAR","","",2,null],[13,"CMY_16","","",2,null],[13,"CMY_16_PLANAR","","",2,null],[13,"CMY_16_SE","","",2,null],[13,"CMYK_8","","",2,null],[13,"CMYKA_8","","",2,null],[13,"CMYK_8_REV","","",2,null],[13,"CMYK_8_PLANAR","","",2,null],[13,"CMYK_16","","",2,null],[13,"CMYK_16_REV","","",2,null],[13,"CMYK_16_PLANAR","","",2,null],[13,"CMYK_16_SE","","",2,null],[13,"KYMC_8","","",2,null],[13,"KYMC_16","","",2,null],[13,"KYMC_16_SE","","",2,null],[13,"KCMY_8","","",2,null],[13,"KCMY_8_REV","","",2,null],[13,"KCMY_16","","",2,null],[13,"KCMY_16_REV","","",2,null],[13,"KCMY_16_SE","","",2,null],[13,"CMYK5_8","","",2,null],[13,"CMYK5_16","","",2,null],[13,"CMYK5_16_SE","","",2,null],[13,"KYMC5_8","","",2,null],[13,"KYMC5_16","","",2,null],[13,"KYMC5_16_SE","","",2,null],[13,"CMYK6_8","","",2,null],[13,"CMYK6_8_PLANAR","","",2,null],[13,"CMYK6_16","","",2,null],[13,"CMYK6_16_PLANAR","","",2,null],[13,"CMYK6_16_SE","","",2,null],[13,"CMYK7_8","","",2,null],[13,"CMYK7_16","","",2,null],[13,"CMYK7_16_SE","","",2,null],[13,"KYMC7_8","","",2,null],[13,"KYMC7_16","","",2,null],[13,"KYMC7_16_SE","","",2,null],[13,"CMYK8_8","","",2,null],[13,"CMYK8_16","","",2,null],[13,"CMYK8_16_SE","","",2,null],[13,"KYMC8_8","","",2,null],[13,"KYMC8_16","","",2,null],[13,"KYMC8_16_SE","","",2,null],[13,"CMYK9_8","","",2,null],[13,"CMYK9_16","","",2,null],[13,"CMYK9_16_SE","","",2,null],[13,"KYMC9_8","","",2,null],[13,"KYMC9_16","","",2,null],[13,"KYMC9_16_SE","","",2,null],[13,"CMYK10_8","","",2,null],[13,"CMYK10_16","","",2,null],[13,"CMYK10_16_SE","","",2,null],[13,"KYMC10_8","","",2,null],[13,"KYMC10_16","","",2,null],[13,"KYMC10_16_SE","","",2,null],[13,"CMYK11_8","","",2,null],[13,"CMYK11_16","","",2,null],[13,"CMYK11_16_SE","","",2,null],[13,"KYMC11_8","","",2,null],[13,"KYMC11_16","","",2,null],[13,"KYMC11_16_SE","","",2,null],[13,"CMYK12_8","","",2,null],[13,"CMYK12_16","","",2,null],[13,"CMYK12_16_SE","","",2,null],[13,"KYMC12_8","","",2,null],[13,"KYMC12_16","","",2,null],[13,"KYMC12_16_SE","","",2,null],[13,"XYZ_16","","",2,null],[13,"Lab_8","","",2,null],[13,"LabV2_8","","",2,null],[13,"ALab_8","","",2,null],[13,"ALabV2_8","","",2,null],[13,"Lab_16","","",2,null],[13,"LabV2_16","","",2,null],[13,"Yxy_16","","",2,null],[13,"YCbCr_8","","",2,null],[13,"YCbCr_8_PLANAR","","",2,null],[13,"YCbCr_16","","",2,null],[13,"YCbCr_16_PLANAR","","",2,null],[13,"YCbCr_16_SE","","",2,null],[13,"YUV_8","","",2,null],[13,"YUV_8_PLANAR","","",2,null],[13,"YUV_16","","",2,null],[13,"YUV_16_PLANAR","","",2,null],[13,"YUV_16_SE","","",2,null],[13,"HLS_8","","",2,null],[13,"HLS_8_PLANAR","","",2,null],[13,"HLS_16","","",2,null],[13,"HLS_16_PLANAR","","",2,null],[13,"HLS_16_SE","","",2,null],[13,"HSV_8","","",2,null],[13,"HSV_8_PLANAR","","",2,null],[13,"HSV_16","","",2,null],[13,"HSV_16_PLANAR","","",2,null],[13,"HSV_16_SE","","",2,null],[13,"NAMED_COLOR_INDEX","","",2,null],[13,"XYZ_FLT","","",2,null],[13,"Lab_FLT","","",2,null],[13,"LabA_FLT","","",2,null],[13,"GRAY_FLT","","",2,null],[13,"RGB_FLT","","",2,null],[13,"RGBA_FLT","","",2,null],[13,"ARGB_FLT","","",2,null],[13,"BGR_FLT","","",2,null],[13,"BGRA_FLT","","",2,null],[13,"CMYK_FLT","","",2,null],[13,"XYZ_DBL","","",2,null],[13,"Lab_DBL","","",2,null],[13,"GRAY_DBL","","",2,null],[13,"RGB_DBL","","",2,null],[13,"BGR_DBL","","",2,null],[13,"CMYK_DBL","","",2,null],[13,"GRAY_HALF_FLT","","",2,null],[13,"RGB_HALF_FLT","","",2,null],[13,"RGBA_HALF_FLT","","",2,null],[13,"CMYK_HALF_FLT","","",2,null],[13,"ARGB_HALF_FLT","","",2,null],[13,"BGR_HALF_FLT","","",2,null],[13,"BGRA_HALF_FLT","","",2,null],[4,"InfoType","","",null,null],[13,"Description","","",3,null],[13,"Manufacturer","","",3,null],[13,"Model","","",3,null],[13,"Copyright","","",3,null],[4,"TagSignature","","",null,null],[13,"AToB0Tag","","'A2B0'",4,null],[13,"AToB1Tag","","'A2B1'",4,null],[13,"AToB2Tag","","'A2B2'",4,null],[13,"BlueColorantTag","","'bXYZ'",4,null],[13,"BlueTRCTag","","'bTRC'",4,null],[13,"BToA0Tag","","'B2A0'",4,null],[13,"BToA1Tag","","'B2A1'",4,null],[13,"BToA2Tag","","'B2A2'",4,null],[13,"CalibrationDateTimeTag","","'calt'",4,null],[13,"CharTargetTag","","'targ'",4,null],[13,"ChromaticAdaptationTag","","'chad'",4,null],[13,"ChromaticityTag","","'chrm'",4,null],[13,"ColorantOrderTag","","'clro'",4,null],[13,"ColorantTableTag","","'clrt'",4,null],[13,"ColorantTableOutTag","","'clot'",4,null],[13,"ColorimetricIntentImageStateTag","","'ciis'",4,null],[13,"CopyrightTag","","'cprt'",4,null],[13,"CrdInfoTag","","'crdi'",4,null],[13,"DataTag","","'data'",4,null],[13,"DateTimeTag","","'dtim'",4,null],[13,"DeviceMfgDescTag","","'dmnd'",4,null],[13,"DeviceModelDescTag","","'dmdd'",4,null],[13,"DeviceSettingsTag","","'devs'",4,null],[13,"DToB0Tag","","'D2B0'",4,null],[13,"DToB1Tag","","'D2B1'",4,null],[13,"DToB2Tag","","'D2B2'",4,null],[13,"DToB3Tag","","'D2B3'",4,null],[13,"BToD0Tag","","'B2D0'",4,null],[13,"BToD1Tag","","'B2D1'",4,null],[13,"BToD2Tag","","'B2D2'",4,null],[13,"BToD3Tag","","'B2D3'",4,null],[13,"GamutTag","","'gamt'",4,null],[13,"GrayTRCTag","","'kTRC'",4,null],[13,"GreenColorantTag","","'gXYZ'",4,null],[13,"GreenTRCTag","","'gTRC'",4,null],[13,"LuminanceTag","","'lumi'",4,null],[13,"MeasurementTag","","'meas'",4,null],[13,"MediaBlackPointTag","","'bkpt'",4,null],[13,"MediaWhitePointTag","","'wtpt'",4,null],[13,"NamedColorTag","","'ncol' // Deprecated by the ICC",4,null],[13,"NamedColor2Tag","","'ncl2'",4,null],[13,"OutputResponseTag","","'resp'",4,null],[13,"PerceptualRenderingIntentGamutTag","","'rig0'",4,null],[13,"Preview0Tag","","'pre0'",4,null],[13,"Preview1Tag","","'pre1'",4,null],[13,"Preview2Tag","","'pre2'",4,null],[13,"ProfileDescriptionTag","","'desc'",4,null],[13,"ProfileDescriptionMLTag","","'dscm'",4,null],[13,"ProfileSequenceDescTag","","'pseq'",4,null],[13,"ProfileSequenceIdTag","","'psid'",4,null],[13,"Ps2CRD0Tag","","'psd0'",4,null],[13,"Ps2CRD1Tag","","'psd1'",4,null],[13,"Ps2CRD2Tag","","'psd2'",4,null],[13,"Ps2CRD3Tag","","'psd3'",4,null],[13,"Ps2CSATag","","'ps2s'",4,null],[13,"Ps2RenderingIntentTag","","'ps2i'",4,null],[13,"RedColorantTag","","'rXYZ'",4,null],[13,"RedTRCTag","","'rTRC'",4,null],[13,"SaturationRenderingIntentGamutTag","","'rig2'",4,null],[13,"ScreeningDescTag","","'scrd'",4,null],[13,"ScreeningTag","","'scrn'",4,null],[13,"TechnologyTag","","'tech'",4,null],[13,"UcrBgTag","","'bfd '",4,null],[13,"ViewingCondDescTag","","'vued'",4,null],[13,"ViewingConditionsTag","","'view'",4,null],[13,"VcgtTag","","'vcgt'",4,null],[13,"MetaTag","","'meta'",4,null],[13,"ArgyllArtsTag","","'arts'",4,null],[4,"Intent","","",null,null],[13,"Perceptual","","ICC Intents",5,null],[13,"RelativeColorimetric","","",5,null],[13,"Saturation","","",5,null],[13,"AbsoluteColorimetric","","",5,null],[13,"PreserveKOnlyPerceptual","","non-icc intents",5,null],[13,"PreserveKOnlyRelativeColorimetric","","",5,null],[13,"PreserveKOnlySaturation","","",5,null],[13,"PreserveKPlanePerceptual","","",5,null],[13,"PreserveKPlaneRelativeColorimetric","","",5,null],[13,"PreserveKPlaneSaturation","","",5,null],[4,"ColorSpaceSignature","","",null,null],[13,"XYZData","","'XYZ '",6,null],[13,"LabData","","'Lab '",6,null],[13,"LuvData","","'Luv '",6,null],[13,"YCbCrData","","'YCbr'",6,null],[13,"YxyData","","'Yxy '",6,null],[13,"RgbData","","'RGB '",6,null],[13,"GrayData","","'GRAY'",6,null],[13,"HsvData","","'HSV '",6,null],[13,"HlsData","","'HLS '",6,null],[13,"CmykData","","'CMYK'",6,null],[13,"CmyData","","'CMY '",6,null],[13,"MCH1Data","","'MCH1'",6,null],[13,"MCH2Data","","'MCH2'",6,null],[13,"MCH3Data","","'MCH3'",6,null],[13,"MCH4Data","","'MCH4'",6,null],[13,"MCH5Data","","'MCH5'",6,null],[13,"MCH6Data","","'MCH6'",6,null],[13,"MCH7Data","","'MCH7'",6,null],[13,"MCH8Data","","'MCH8'",6,null],[13,"MCH9Data","","'MCH9'",6,null],[13,"MCHAData","","'MCHA'",6,null],[13,"MCHBData","","'MCHB'",6,null],[13,"MCHCData","","'MCHC'",6,null],[13,"MCHDData","","'MCHD'",6,null],[13,"MCHEData","","'MCHE'",6,null],[13,"MCHFData","","'MCHF'",6,null],[13,"NamedData","","'nmcl'",6,null],[13,"Sig1colorData","","'1CLR'",6,null],[13,"Sig2colorData","","'2CLR'",6,null],[13,"Sig3colorData","","'3CLR'",6,null],[13,"Sig4colorData","","'4CLR'",6,null],[13,"Sig5colorData","","'5CLR'",6,null],[13,"Sig6colorData","","'6CLR'",6,null],[13,"Sig7colorData","","'7CLR'",6,null],[13,"Sig8colorData","","'8CLR'",6,null],[13,"Sig9colorData","","'9CLR'",6,null],[13,"Sig10colorData","","'ACLR'",6,null],[13,"Sig11colorData","","'BCLR'",6,null],[13,"Sig12colorData","","'CCLR'",6,null],[13,"Sig13colorData","","'DCLR'",6,null],[13,"Sig14colorData","","'ECLR'",6,null],[13,"Sig15colorData","","'FCLR'",6,null],[13,"LuvKData","","'LuvK'",6,null],[4,"ProfileClassSignature","","",null,null],[13,"InputClass","","'scnr'",7,null],[13,"DisplayClass","","'mntr'",7,null],[13,"OutputClass","","'prtr'",7,null],[13,"LinkClass","","'link'",7,null],[13,"AbstractClass","","'abst'",7,null],[13,"ColorSpaceClass","","'spac'",7,null],[13,"NamedColorClass","","'nmcl'",7,null],[3,"ViewingConditions","","",null,null],[12,"whitePoint","","",8,null],[12,"Yb","","",8,null],[12,"La","","",8,null],[12,"surround","","",8,null],[12,"D_value","","",8,null],[3,"Profile","","An ICC color profile",null,null],[3,"CIECAM02","","CIE CAM02",null,null],[3,"ThreadContext","","Per-thread context for multi-threaded operation.",null,null],[3,"MLU","","This represents owned Multi Localized Unicode type. Most methods are implemented on `MLURef`.",null,null],[3,"MLURef","","This is a borrwed Multi Localized Unicode type. It holds Unicode strings associated with `Locale`.",null,null],[3,"Flags","","Flags for creating `Transform`. Can be OR-ed together with `|`.",null,null],[12,"0","","",9,null],[3,"DisallowCache","","",null,null],[3,"AllowCache","","",null,null],[3,"Locale","","Language code from ISO-639/2 and region code from ISO-3166.",null,null],[3,"Pipeline","","This is an owned version of `PipelineRef`.",null,null],[3,"PipelineRef","","Pipelines are a convenient way to model complex operations on image data.",null,null],[3,"Stage","","This is an owned version of `Stage`.",null,null],[3,"StageRef","","Stage functions",null,null],[3,"StagesIter","","",null,null],[12,"0","","",10,null],[3,"Transform","","Conversion between two ICC profiles.",null,null],[3,"ToneCurve","","Owned version of `ToneCurveRef`",null,null],[3,"ToneCurveRef","","Tone curves are powerful constructs that can contain curves specified in diverse ways.",null,null],[3,"NamedColorInfo","","Color in the palette",null,null],[12,"name","","",11,null],[12,"prefix","","",11,null],[12,"suffix","","",11,null],[12,"pcs","","",11,null],[12,"colorant","","",11,null],[3,"NamedColorList","","Owned version of `NamedColorListRef`",null,null],[3,"NamedColorListRef","","Palette of colors with names",null,null],[4,"Error","","",null,null],[13,"ObjectCreationError","","",12,null],[13,"MissingData","","",12,null],[13,"InvalidString","","",12,null],[4,"Tag","","Value of a tag in an ICC profile",null,null],[13,"CIExyYTRIPLE","","",13,null],[13,"CIEXYZ","","",13,null],[13,"ICCData","","",13,null],[13,"ICCMeasurementConditions","","",13,null],[13,"ICCViewingConditions","","",13,null],[13,"MLU","","Unicode string",13,null],[13,"NAMEDCOLORLIST","","A palette",13,null],[13,"Pipeline","","",13,null],[13,"Screening","","",13,null],[13,"SEQ","","",13,null],[13,"Intent","","",13,null],[13,"ColorimetricIntentImageState","","",13,null],[13,"Technology","","",13,null],[13,"ToneCurve","","",13,null],[13,"UcrBg","","",13,null],[13,"None","","Unknown format or missing data",13,null],[5,"version","","LCMS version",null,{"inputs":[],"output":{"name":"u32"}}],[5,"white_point_from_temp","","Temperature <-> Chromaticity (Black body) Color temperature is a characteristic of visible light that has important applications.",null,{"inputs":[{"name":"f64"}],"output":{"generics":["ciexyy"],"name":"option"}}],[11,"new_icc","","Parse ICC profile from the in-memory array",14,null],[11,"new_file","","Load ICC profile file from disk",14,{"inputs":[{"name":"p"}],"output":{"name":"result"}}],[11,"new_srgb","","Create an ICC virtual profile for sRGB space. sRGB is a standard RGB color space created cooperatively by HP and Microsoft in 1996 for use on monitors, printers, and the Internet.",14,{"inputs":[],"output":{"name":"self"}}],[11,"new_rgb","","This function creates a display RGB profile based on White point, primaries and transfer functions. It populates following tags; this conform a standard RGB Display Profile, and then I add (As per addendum II) chromaticity tag.",14,null],[11,"new_gray","","This function creates a gray profile based on White point and transfer function. It populates following tags; this conform a standard gray display profile.",14,{"inputs":[{"name":"ciexyy"},{"name":"tonecurve"}],"output":{"name":"lcmsresult"}}],[11,"new_xyz","","Creates a XYZ  XYZ identity, marking it as v4 ICC profile.  WhitePoint used in Absolute colorimetric intent  is D50.",14,{"inputs":[],"output":{"name":"self"}}],[11,"new_null","","Creates a fake NULL profile. This profile return 1 channel as always 0. Is useful only for gamut checking tricks.",14,{"inputs":[],"output":{"name":"self"}}],[11,"new_placeholder","","Creates an empty profile object, ready to be populated by the programmer.",14,{"inputs":[],"output":{"name":"self"}}],[11,"ink_limiting","","This is a devicelink operating in CMYK for ink-limiting. Currently only cmsSigCmykData is supported. Limit: Amount of ink limiting in % (0..400%)",14,{"inputs":[{"name":"colorspacesignature"},{"name":"f64"}],"output":{"name":"lcmsresult"}}],[11,"new_device_link","","Generates a device-link profile from a given color transform. This profile can then be used by any other function accepting profile handle. Depending on the specified version number, the implementation of the devicelink may vary. Accepted versions are in range 1.0…4.3",14,{"inputs":[{"name":"transform"},{"name":"f64"},{"name":"flags"}],"output":{"name":"lcmsresult"}}],[11,"icc","","Create ICC file in memory buffer",14,{"inputs":[{"name":"self"}],"output":{"generics":["vec"],"name":"lcmsresult"}}],[11,"device_class","","Gets the device class signature from profile header.",14,{"inputs":[{"name":"self"}],"output":{"name":"profileclasssignature"}}],[11,"set_device_class","","Sets the device class signature in profile header.",14,{"inputs":[{"name":"self"},{"name":"profileclasssignature"}],"output":null}],[11,"encoded_icc_version","","Returns the profile ICC version in the same format as it is stored in the header.",14,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"set_encoded_icc_version","","",14,{"inputs":[{"name":"self"},{"name":"u32"}],"output":null}],[11,"header_attributes","","Gets the attribute flags. Currently defined values correspond to the low 4 bytes of the 8 byte attribute quantity.",14,{"inputs":[{"name":"self"}],"output":{"name":"u64"}}],[11,"set_header_attributes","","Sets the attribute flags in the profile header.",14,{"inputs":[{"name":"self"},{"name":"u64"}],"output":null}],[11,"header_creator","","",14,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"header_flags","","Get header flags of given ICC profile object.",14,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"set_header_flags","","Sets header flags of given ICC profile object. Valid flags are defined in Table 7 of LCMS PDF.",14,{"inputs":[{"name":"self"},{"name":"u32"}],"output":null}],[11,"header_manufacturer","","Returns the manufacturer signature as described in the header.",14,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"set_header_manufacturer","","Sets the manufacturer signature in the header.",14,{"inputs":[{"name":"self"},{"name":"u32"}],"output":null}],[11,"header_model","","Returns the model signature as described in the header.",14,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"set_header_model","","Sets the model signature in the profile header.",14,{"inputs":[{"name":"self"},{"name":"u32"}],"output":null}],[11,"header_rendering_intent","","Gets the profile header rendering intent.",14,{"inputs":[{"name":"self"}],"output":{"name":"intent"}}],[11,"set_header_rendering_intent","","",14,{"inputs":[{"name":"self"},{"name":"intent"}],"output":null}],[11,"pcs","","Gets the profile connection space used by the given profile, using the ICC convention.",14,{"inputs":[{"name":"self"}],"output":{"name":"colorspacesignature"}}],[11,"set_pcs","","Sets the profile connection space signature in profile header, using ICC convention.",14,{"inputs":[{"name":"self"},{"name":"colorspacesignature"}],"output":null}],[11,"info","","",14,{"inputs":[{"name":"self"},{"name":"infotype"},{"name":"locale"}],"output":{"generics":["string"],"name":"option"}}],[11,"version","","Returns the profile ICC version. The version is decoded to readable floating point format.",14,{"inputs":[{"name":"self"}],"output":{"name":"f64"}}],[11,"set_version","","Sets the ICC version in profile header. The version is given to this function as a float n.m",14,{"inputs":[{"name":"self"},{"name":"f64"}],"output":null}],[11,"tag_signatures","","",14,{"inputs":[{"name":"self"}],"output":{"generics":["tagsignature"],"name":"vec"}}],[11,"detect_black_point","","",14,{"inputs":[{"name":"self"},{"name":"intent"}],"output":{"generics":["ciexyz"],"name":"option"}}],[11,"detect_destination_black_point","","",14,{"inputs":[{"name":"self"},{"name":"intent"}],"output":{"generics":["ciexyz"],"name":"option"}}],[11,"detect_tac","","",14,{"inputs":[{"name":"self"}],"output":{"name":"f64"}}],[11,"color_space","","Gets the color space used by the given profile, using the ICC convention.",14,{"inputs":[{"name":"self"}],"output":{"name":"colorspacesignature"}}],[11,"set_color_space","","Sets the profile connection space signature in profile header, using ICC convention.",14,{"inputs":[{"name":"self"},{"name":"colorspacesignature"}],"output":null}],[11,"is_clut","","",14,{"inputs":[{"name":"self"},{"name":"intent"},{"name":"u32"}],"output":{"name":"bool"}}],[11,"is_intent_supported","","",14,{"inputs":[{"name":"self"},{"name":"intent"},{"name":"u32"}],"output":{"name":"bool"}}],[11,"is_matrix_shaper","","",14,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"has_tag","","",14,{"inputs":[{"name":"self"},{"name":"tagsignature"}],"output":{"name":"bool"}}],[11,"read_tag","","",14,{"inputs":[{"name":"self"},{"name":"tagsignature"}],"output":{"name":"tag"}}],[11,"write_tag","","",14,{"inputs":[{"name":"self"},{"name":"tagsignature"},{"name":"tag"}],"output":{"name":"bool"}}],[11,"profile_id","","Retrieves the Profile ID stored in the profile header.",14,{"inputs":[{"name":"self"}],"output":{"name":"profileid"}}],[11,"set_default_profile_id","","Computes a MD5 checksum and stores it as Profile ID in the profile header.",14,{"inputs":[{"name":"self"}],"output":null}],[11,"set_profile_id","","",14,{"inputs":[{"name":"self"},{"name":"profileid"}],"output":null}],[11,"new_icc_context","","",14,null],[11,"new_file_context","","",14,{"inputs":[{"name":"ctx"},{"name":"p"}],"output":{"name":"result"}}],[11,"new_srgb_context","","",14,{"inputs":[{"name":"ctx"}],"output":{"name":"self"}}],[11,"new_rgb_context","","",14,null],[11,"new_gray_context","","",14,{"inputs":[{"name":"ctx"},{"name":"ciexyy"},{"name":"tonecurve"}],"output":{"name":"lcmsresult"}}],[11,"new_linearization_device_link_context","","This is a devicelink operating in the target colorspace with as many transfer functions as components. Number of tone curves must be sufficient for the color space.",14,null],[11,"new_bchsw_abstract_context","","Creates an abstract devicelink operating in Lab for Bright/Contrast/Hue/Saturation and white point translation. White points are specified as temperatures ºK",14,{"inputs":[{"name":"ctx"},{"name":"usize"},{"name":"f64"},{"name":"f64"},{"name":"f64"},{"name":"f64"},{"name":"option"}],"output":{"name":"lcmsresult"}}],[11,"ink_limiting_context","","This is a devicelink operating in CMYK for ink-limiting. Currently only cmsSigCmykData is supported. Limit: Amount of ink limiting in % (0..400%)",14,{"inputs":[{"name":"ctx"},{"name":"colorspacesignature"},{"name":"f64"}],"output":{"name":"lcmsresult"}}],[11,"new_xyz_context","","Creates a XYZ  XYZ identity, marking it as v4 ICC profile.  WhitePoint used in Absolute colorimetric intent  is D50.",14,{"inputs":[{"name":"ctx"}],"output":{"name":"self"}}],[11,"new_null_context","","Creates a fake NULL profile. This profile return 1 channel as always 0. Is useful only for gamut checking tricks.",14,{"inputs":[{"name":"ctx"}],"output":{"name":"self"}}],[11,"new_lab2_context","","Creates a Lab  Lab identity, marking it as v2 ICC profile.",14,{"inputs":[{"name":"ctx"},{"name":"ciexyy"}],"output":{"name":"lcmsresult"}}],[11,"new_lab4_context","","Creates a Lab  Lab identity, marking it as v4 ICC profile.",14,{"inputs":[{"name":"ctx"},{"name":"ciexyy"}],"output":{"name":"lcmsresult"}}],[11,"drop","","",14,{"inputs":[{"name":"self"}],"output":null}],[11,"is_none","","",13,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"data_for_signature","","",13,null],[11,"new","","",13,null],[11,"new","","A CAM02 object based on given viewing conditions.",15,{"inputs":[{"name":"viewingconditions"}],"output":{"name":"lcmsresult"}}],[11,"forward","","Evaluates the CAM02 model in the forward direction",15,{"inputs":[{"name":"self"},{"name":"ciexyz"}],"output":{"name":"jch"}}],[11,"reverse","","Evaluates the CAM02 model in the reverse direction",15,{"inputs":[{"name":"self"},{"name":"jch"}],"output":{"name":"ciexyz"}}],[11,"drop","","",15,{"inputs":[{"name":"self"}],"output":null}],[11,"new","","",16,{"inputs":[],"output":{"name":"self"}}],[11,"user_data","","",16,null],[11,"install_plugin","","",16,null],[11,"unregister_plugins","","",16,{"inputs":[{"name":"self"}],"output":null}],[11,"supported_intents","","",16,{"inputs":[{"name":"self"}],"output":{"generics":["intent","cstr"],"name":"hashmap"}}],[11,"adaptation_state","","Adaptation state for absolute colorimetric intent, on all but cmsCreateExtendedTransform.",16,{"inputs":[{"name":"self"}],"output":{"name":"f64"}}],[11,"set_adaptation_state","","Sets adaptation state for absolute colorimetric intent in the given context.  Adaptation state applies on all but cmsCreateExtendedTransformTHR(). Little CMS can handle incomplete adaptation states.",16,{"inputs":[{"name":"self"},{"name":"f64"}],"output":null}],[11,"set_alarm_codes","","Sets the codes used to mark out-out-gamut on Proofing transforms for a given context. Values are meant to be encoded in 16 bits.",16,null],[11,"alarm_codes","","Gets the current codes used to mark out-out-gamut on Proofing transforms for the given context. Values are meant to be encoded in 16 bits.",16,null],[11,"clone","","",16,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"drop","","",16,{"inputs":[{"name":"self"}],"output":null}],[11,"default","","",16,{"inputs":[],"output":{"name":"self"}}],[11,"from_ptr","","",17,null],[11,"as_ptr","","",17,null],[11,"drop","","",17,{"inputs":[{"name":"self"}],"output":null}],[11,"deref","","",17,{"inputs":[{"name":"self"}],"output":{"name":"mluref"}}],[11,"deref_mut","","",17,{"inputs":[{"name":"self"}],"output":{"name":"mluref"}}],[11,"borrow","","",17,{"inputs":[{"name":"self"}],"output":{"name":"mluref"}}],[11,"as_ref","","",17,{"inputs":[{"name":"self"}],"output":{"name":"mluref"}}],[11,"new","","Allocates an empty multilocalized unicode object.",17,{"inputs":[{"name":"usize"}],"output":{"name":"self"}}],[11,"set_text_ascii","","Fills an ASCII (7 bit) entry for the given Language and country.",18,{"inputs":[{"name":"self"},{"name":"str"},{"name":"locale"}],"output":{"name":"bool"}}],[11,"set_text","","Fills a UNICODE wide char (16 bit) entry for the given Language and country.",18,{"inputs":[{"name":"self"},{"name":"str"},{"name":"locale"}],"output":{"name":"bool"}}],[11,"text_ascii","","Gets an ASCII (7 bit) entry for the given Language and country.",18,{"inputs":[{"name":"self"},{"name":"locale"}],"output":{"generics":["cstring"],"name":"lcmsresult"}}],[11,"text","","Gets a Unicode entry for the given Language and country",18,{"inputs":[{"name":"self"},{"name":"locale"}],"output":{"generics":["string"],"name":"lcmsresult"}}],[11,"tanslations","","Obtains the translations stored in a given multilocalized unicode object.",18,{"inputs":[{"name":"self"}],"output":{"generics":["locale"],"name":"vec"}}],[11,"tanslation","","Obtains the translation rule for given multilocalized unicode object.",18,{"inputs":[{"name":"self"},{"name":"locale"}],"output":{"generics":["locale"],"name":"lcmsresult"}}],[11,"fmt","","",18,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",11,{"inputs":[{"name":"self"}],"output":{"name":"namedcolorinfo"}}],[11,"fmt","","",11,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",11,{"inputs":[{"name":"self"},{"name":"namedcolorinfo"}],"output":{"name":"bool"}}],[11,"ne","","",11,{"inputs":[{"name":"self"},{"name":"namedcolorinfo"}],"output":{"name":"bool"}}],[11,"from_ptr","","",19,null],[11,"as_ptr","","",19,null],[11,"drop","","",19,{"inputs":[{"name":"self"}],"output":null}],[11,"deref","","",19,{"inputs":[{"name":"self"}],"output":{"name":"namedcolorlistref"}}],[11,"deref_mut","","",19,{"inputs":[{"name":"self"}],"output":{"name":"namedcolorlistref"}}],[11,"borrow","","",19,{"inputs":[{"name":"self"}],"output":{"name":"namedcolorlistref"}}],[11,"as_ref","","",19,{"inputs":[{"name":"self"}],"output":{"name":"namedcolorlistref"}}],[11,"new","","",19,{"inputs":[{"name":"usize"},{"name":"usize"},{"name":"str"},{"name":"str"}],"output":{"name":"lcmsresult"}}],[11,"fmt","","",20,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"drop","","",21,{"inputs":[{"name":"self"}],"output":null}],[11,"clone","","",21,{"inputs":[{"name":"self"}],"output":{"name":"pipeline"}}],[11,"to_owned","","",22,{"inputs":[{"name":"self"}],"output":{"name":"pipeline"}}],[11,"deref","","",21,{"inputs":[{"name":"self"}],"output":{"name":"pipelineref"}}],[11,"deref_mut","","",21,{"inputs":[{"name":"self"}],"output":{"name":"pipelineref"}}],[11,"borrow","","",21,{"inputs":[{"name":"self"}],"output":{"name":"pipelineref"}}],[11,"as_ref","","",21,{"inputs":[{"name":"self"}],"output":{"name":"pipelineref"}}],[11,"new","","Allocates an empty pipeline. Final Input and output channels must be specified at creation time.",21,{"inputs":[{"name":"usize"},{"name":"usize"}],"output":{"name":"lcmsresult"}}],[11,"cat","","Appends pipeline given as argument at the end of this pipeline. Channel count must match.",22,{"inputs":[{"name":"self"},{"name":"pipelineref"}],"output":{"name":"bool"}}],[11,"stage_count","","",22,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"first_stage","","",22,{"inputs":[{"name":"self"}],"output":{"generics":["stageref"],"name":"option"}}],[11,"last_stage","","",22,{"inputs":[{"name":"self"}],"output":{"generics":["stageref"],"name":"option"}}],[11,"stages","","",22,{"inputs":[{"name":"self"}],"output":{"name":"stagesiter"}}],[11,"set_8bit","","",22,{"inputs":[{"name":"self"},{"name":"bool"}],"output":{"name":"bool"}}],[11,"input_channels","","",22,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"output_channels","","",22,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"eval","","",22,null],[11,"eval_unchecked","","",22,null],[11,"fmt","","",22,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"channels","","",6,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"pixel_format","","",6,{"inputs":[{"name":"self"}],"output":{"name":"pixelformat"}}],[11,"adapt_to_illuminant","","",0,{"inputs":[{"name":"self"},{"name":"ciexyz"},{"name":"ciexyz"}],"output":{"generics":["ciexyz"],"name":"option"}}],[11,"to_lab","","",0,{"inputs":[{"name":"self"},{"name":"ciexyz"}],"output":{"name":"cielab"}}],[11,"from_encoded","","",0,null],[11,"cie2000_delta_e","","",1,{"inputs":[{"name":"self"},{"name":"cielab"},{"name":"f64"},{"name":"f64"},{"name":"f64"}],"output":{"name":"f64"}}],[11,"cie94_delta_e","","",1,{"inputs":[{"name":"self"},{"name":"cielab"}],"output":{"name":"f64"}}],[11,"bfd_delta_e","","",1,{"inputs":[{"name":"self"},{"name":"cielab"}],"output":{"name":"f64"}}],[11,"delta_e","","",1,{"inputs":[{"name":"self"},{"name":"cielab"}],"output":{"name":"f64"}}],[11,"cmc_delta_e","","",1,{"inputs":[{"name":"self"},{"name":"cielab"},{"name":"f64"},{"name":"f64"}],"output":{"name":"f64"}}],[11,"desaturate","","",1,{"inputs":[{"name":"self"},{"name":"f64"},{"name":"f64"},{"name":"f64"},{"name":"f64"}],"output":{"name":"bool"}}],[11,"encoded","","",1,null],[11,"encoded_v2","","",1,null],[11,"from_encoded","","",1,null],[11,"from_encoded_v2","","",1,null],[11,"to_xyz","","",1,{"inputs":[{"name":"self"},{"name":"ciexyz"}],"output":{"name":"ciexyz"}}],[11,"fmt","","",9,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",9,{"inputs":[{"name":"self"}],"output":{"name":"flags"}}],[18,"NO_CACHE","","Inhibit 1-pixel cache. This is required to make `Transform` implement `Sync`",9,null],[18,"NO_OPTIMIZE","","Inhibit optimizations",9,null],[18,"NULL_TRANSFORM","","Don't transform anyway",9,null],[18,"GAMUT_CHECK","","Proofing flags Out of Gamut alarm",9,null],[18,"SOFT_PROOFING","","Do softproofing",9,null],[18,"BLACKPOINT_COMPENSATION","","",9,null],[18,"NO_WHITE_ON_WHITE_FIXUP","","Don't fix scum dot",9,null],[18,"HIGHRES_PRECALC","","Use more memory to give better accurancy",9,null],[18,"LOWRES_PRECALC","","Use less memory to minimize resources",9,null],[18,"DEVICELINK_8BITS","","For devicelink creation Create 8 bits devicelinks",9,null],[18,"GUESS_DEVICE_CLASS","","Guess device class (for transform2devicelink)",9,null],[18,"KEEP_SEQUENCE","","Keep profile sequence for devicelink creation",9,null],[18,"FORCE_CLUT","","Specific to a particular optimizations Force CLUT optimization",9,null],[18,"CLUT_POST_LINEARIZATION","","create postlinearization tables if possible",9,null],[18,"CLUT_PRE_LINEARIZATION","","create prelinearization tables if possible",9,null],[18,"NO_NEGATIVES","","Specific to unbounded mode Prevent negative numbers in floating point transforms",9,null],[18,"COPY_ALPHA","","Alpha channels are copied on cmsDoTransform()",9,null],[18,"NO_DEFAULT_RESOURCE_DEF","","CRD special",9,null],[11,"bitor","","",9,{"inputs":[{"name":"self"},{"name":"flags"}],"output":{"generics":["disallowcache"],"name":"flags"}}],[11,"bitor","","",9,{"inputs":[{"name":"self"},{"name":"flags"}],"output":{"name":"flags"}}],[11,"has","","",9,{"inputs":[{"name":"self"},{"name":"flags"}],"output":{"name":"bool"}}],[11,"default","","Default flags",9,{"inputs":[],"output":{"name":"self"}}],[11,"clone","","",23,{"inputs":[{"name":"self"}],"output":{"name":"disallowcache"}}],[11,"fmt","","",23,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",24,{"inputs":[{"name":"self"}],"output":{"name":"allowcache"}}],[11,"fmt","","",24,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",25,{"inputs":[{"name":"self"}],"output":{"name":"locale"}}],[11,"eq","","",25,{"inputs":[{"name":"self"},{"name":"locale"}],"output":{"name":"bool"}}],[11,"ne","","",25,{"inputs":[{"name":"self"},{"name":"locale"}],"output":{"name":"bool"}}],[11,"cmp","","",25,{"inputs":[{"name":"self"},{"name":"locale"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",25,{"inputs":[{"name":"self"},{"name":"locale"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"lt","","",25,{"inputs":[{"name":"self"},{"name":"locale"}],"output":{"name":"bool"}}],[11,"le","","",25,{"inputs":[{"name":"self"},{"name":"locale"}],"output":{"name":"bool"}}],[11,"gt","","",25,{"inputs":[{"name":"self"},{"name":"locale"}],"output":{"name":"bool"}}],[11,"ge","","",25,{"inputs":[{"name":"self"},{"name":"locale"}],"output":{"name":"bool"}}],[11,"new","","A string in format: 2-letter language name, separator, 2-letter country name, e.g. \"en_US\"",25,{"inputs":[{"name":"str"}],"output":{"name":"self"}}],[11,"none","","Default/unspecified/any locale",25,{"inputs":[],"output":{"name":"self"}}],[11,"from","","",25,{"inputs":[{"name":"str"}],"output":{"name":"self"}}],[11,"default","","",25,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",25,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",25,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_ptr","","",26,null],[11,"as_ptr","","",26,null],[11,"drop","","",26,{"inputs":[{"name":"self"}],"output":null}],[11,"deref","","",26,{"inputs":[{"name":"self"}],"output":{"name":"stageref"}}],[11,"deref_mut","","",26,{"inputs":[{"name":"self"}],"output":{"name":"stageref"}}],[11,"borrow","","",26,{"inputs":[{"name":"self"}],"output":{"name":"stageref"}}],[11,"as_ref","","",26,{"inputs":[{"name":"self"}],"output":{"name":"stageref"}}],[11,"new_identity","","Creates an empty (identity) stage that does no operation.",26,{"inputs":[{"name":"u32"}],"output":{"name":"stage"}}],[11,"new_tone_curves","","Creates a stage that contains nChannels tone curves, one per channel.",26,null],[11,"new_matrix","","Creates a stage that contains a matrix plus an optional offset.",26,null],[11,"new_clut","","Creates a stage that contains a float or 16 bits multidimensional lookup table (CLUT).",26,{"inputs":[{"name":"usize"},{"name":"u32"},{"name":"u32"},{"name":"option"}],"output":{"name":"lcmsresult"}}],[11,"input_channels","","",27,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"output_channels","","",27,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"stage_type","","",27,{"inputs":[{"name":"self"}],"output":{"name":"stagesignature"}}],[11,"next","","",10,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"fmt","","",27,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Creates a color transform for translating bitmaps.",28,{"inputs":[{"name":"profile"},{"name":"pixelformat"},{"name":"profile"},{"name":"pixelformat"},{"name":"intent"}],"output":{"name":"lcmsresult"}}],[11,"new_flags","","Non-thread-safe",28,{"inputs":[{"name":"profile"},{"name":"pixelformat"},{"name":"profile"},{"name":"pixelformat"},{"name":"intent"},{"name":"flags"}],"output":{"name":"lcmsresult"}}],[11,"new_proofing","","A proofing transform does emulate the colors that would appear as  the image were rendered on a specific device. The obtained transform emulates the device described by the \"Proofing\" profile. Useful to preview final result without rendering to the physical medium.",28,{"inputs":[{"name":"profile"},{"name":"pixelformat"},{"name":"profile"},{"name":"pixelformat"},{"name":"profile"},{"name":"intent"},{"name":"intent"},{"name":"flags"}],"output":{"name":"lcmsresult"}}],[11,"new_multiprofile","","Multiprofile transforms",28,null],[11,"transform_in_place","","",28,null],[11,"new_context","","",28,{"inputs":[{"name":"ctx"},{"name":"profile"},{"name":"pixelformat"},{"name":"profile"},{"name":"pixelformat"},{"name":"intent"}],"output":{"name":"lcmsresult"}}],[11,"transform_pixels","","This function translates bitmaps according of parameters setup when creating the color transform.",28,null],[11,"input_format","","",28,{"inputs":[{"name":"self"}],"output":{"name":"pixelformat"}}],[11,"output_format","","",28,{"inputs":[{"name":"self"}],"output":{"name":"pixelformat"}}],[11,"new_flags_context","","",28,{"inputs":[{"name":"ctx"},{"name":"profile"},{"name":"pixelformat"},{"name":"profile"},{"name":"pixelformat"},{"name":"intent"},{"name":"flags"}],"output":{"name":"lcmsresult"}}],[11,"new_proofing_context","","",28,{"inputs":[{"name":"ctx"},{"name":"profile"},{"name":"pixelformat"},{"name":"profile"},{"name":"pixelformat"},{"name":"profile"},{"name":"intent"},{"name":"intent"},{"name":"flags"}],"output":{"name":"lcmsresult"}}],[11,"global_adaptation_state","","Adaptation state for absolute colorimetric intent, on all but cmsCreateExtendedTransform.",28,{"inputs":[],"output":{"name":"f64"}}],[11,"set_global_adaptation_state","","Sets adaptation state for absolute colorimetric intent, on all but cmsCreateExtendedTransform. Little CMS can handle incomplete adaptation states.",28,{"inputs":[{"name":"f64"}],"output":null}],[11,"set_global_alarm_codes","","Sets the global codes used to mark out-out-gamut on Proofing transforms. Values are meant to be encoded in 16 bits. AlarmCodes: Array [16] of codes. ALL 16 VALUES MUST BE SPECIFIED, set to zero unused channels.",28,null],[11,"global_alarm_codes","","Gets the current global codes used to mark out-out-gamut on Proofing transforms. Values are meant to be encoded in 16 bits.",28,null],[11,"drop","","",28,{"inputs":[{"name":"self"}],"output":null}],[11,"from_ptr","","",29,null],[11,"as_ptr","","",29,null],[11,"drop","","",29,{"inputs":[{"name":"self"}],"output":null}],[11,"clone","","",29,{"inputs":[{"name":"self"}],"output":{"name":"tonecurve"}}],[11,"to_owned","","",30,{"inputs":[{"name":"self"}],"output":{"name":"tonecurve"}}],[11,"deref","","",29,{"inputs":[{"name":"self"}],"output":{"name":"tonecurveref"}}],[11,"deref_mut","","",29,{"inputs":[{"name":"self"}],"output":{"name":"tonecurveref"}}],[11,"borrow","","",29,{"inputs":[{"name":"self"}],"output":{"name":"tonecurveref"}}],[11,"as_ref","","",29,{"inputs":[{"name":"self"}],"output":{"name":"tonecurveref"}}],[11,"new","","Simplified wrapper to `new_parametric`. Builds a parametric curve of type 1.",29,{"inputs":[{"name":"f64"}],"output":{"name":"self"}}],[11,"new_tabulated","","Builds a tone curve based on a table of 16-bit values. Tone curves built with this function are restricted to 0…1.0 domain.",29,null],[11,"new_tabulated_float","","Builds a tone curve based on a table of floating point  values. Tone curves built with this function are not restricted to 0…1.0 domain.",29,null],[11,"new_parametric","","See Table 52 in LCMS documentation for descriptino of the types.",29,null],[11,"reversed","","Creates a tone curve that is the inverse  of given tone curve.",30,{"inputs":[{"name":"self"}],"output":{"name":"tonecurve"}}],[11,"reversed_samples","","Creates a tone curve that is the inverse  of given tone curve. In the case it couldn’t be analytically reversed, a tablulated curve of nResultSamples is created.",30,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"tonecurve"}}],[11,"join","","Composites two tone curves in the form Y^-1(X(t)) (self is X, the argument is Y)",30,{"inputs":[{"name":"self"},{"name":"tonecurveref"},{"name":"usize"}],"output":{"name":"tonecurve"}}],[11,"is_multisegment","","Returns TRUE if the tone curve contains more than one segment, FALSE if it has only one segment.",30,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_linear","","Returns an estimation of cube being an identity (1:1) in the [0..1] domain. Does not take unbounded parts into account. This is just a coarse approximation, with no mathematical validity.",30,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_monotonic","","Returns an estimation of monotonicity of curve in the [0..1] domain. Does not take unbounded parts into account. This is just a coarse approximation, with no mathematical validity.",30,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_descending","","Does not take unbounded parts into account.",30,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"parametric_type","","",30,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"estimated_gamma","","Estimates the apparent gamma of the tone curve by using least squares fitting. Precision: The maximum standard deviation allowed on the residuals, 0.01 is a fair value, set it to a big number to fit any curve, mo matter how good is the fit.",30,{"inputs":[{"name":"self"},{"name":"f64"}],"output":{"generics":["f64"],"name":"option"}}],[11,"smooth","","Smoothes tone curve according to the lambda parameter. From: Eilers, P.H.C. (1994) Smoothing and interpolation with finite differences. in: Graphic Gems IV, Heckbert, P.S. (ed.), Academic press.",30,{"inputs":[{"name":"self"},{"name":"f64"}],"output":{"name":"bool"}}],[11,"estimated_entries","","Tone curves do maintain a shadow low-resolution tabulated representation of the curve. This function returns a pointer to this table.",30,null],[11,"eval","","Evaluates the given number (u16 or f32) across the given tone curve.",30,{"inputs":[{"name":"self"},{"name":"tonecurvevalue"}],"output":{"name":"tonecurvevalue"}}],[11,"fmt","","",30,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",12,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",12,{"inputs":[{"name":"self"}],"output":{"name":"error"}}],[11,"eq","","",12,{"inputs":[{"name":"self"},{"name":"error"}],"output":{"name":"bool"}}],[11,"fmt","","",12,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",12,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[6,"LCMSResult","","This is a regular `Result` type with LCMS-specific `Error`",null,null],[8,"ColorSpaceSignatureExt","","",null,null],[10,"channels","","Returns channel count for a given color space.",31,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[10,"pixel_format","","Converts from ICC color space notation (LCMS PDF Table 10) to Little CMS color space notation (LCMS PDF Table 36).",31,{"inputs":[{"name":"self"}],"output":{"name":"pixelformat"}}],[8,"CIEXYZExt","","Chromatic adaptation",null,null],[10,"adapt_to_illuminant","","Adapts a color to a given illuminant. Original color is expected to have a `source_white_point` white point.",32,{"inputs":[{"name":"self"},{"name":"ciexyz"},{"name":"ciexyz"}],"output":{"generics":["ciexyz"],"name":"option"}}],[10,"to_lab","","Colorimetric space conversion.",32,{"inputs":[{"name":"self"},{"name":"ciexyz"}],"output":{"name":"cielab"}}],[10,"from_encoded","","Decodes a XYZ value, encoded on ICC convention",32,null],[8,"CIExzYExt","","White point",null,null],[10,"temp","","Correlates a black body temperature in ºK from given chromaticity.",33,{"inputs":[{"name":"self"}],"output":{"generics":["f64"],"name":"option"}}],[8,"CIELabExt","","Delta E",null,null],[10,"cie2000_delta_e","","Delta-E 2000 is the first major revision of the dE94 equation.",34,{"inputs":[{"name":"self"},{"name":"cielab"},{"name":"f64"},{"name":"f64"},{"name":"f64"}],"output":{"name":"f64"}}],[10,"cie94_delta_e","","A technical committee of the CIE (TC1-29) published an equation in 1995 called CIE94. The equation is similar to CMC but the weighting functions are largely based on RIT/DuPont tolerance data derived from automotive paint experiments where sample surfaces are smooth. It also has ratios, labeled kL (lightness) and Kc (chroma) and the commercial factor (cf) but these tend to be preset in software and are not often exposed for the user (as it is the case in Little CMS). Returns: The CIE94 dE metric value.",34,{"inputs":[{"name":"self"},{"name":"cielab"}],"output":{"name":"f64"}}],[10,"bfd_delta_e","","BFD delta E metric.",34,{"inputs":[{"name":"self"},{"name":"cielab"}],"output":{"name":"f64"}}],[10,"delta_e","","The dE76 metric value.",34,{"inputs":[{"name":"self"},{"name":"cielab"}],"output":{"name":"f64"}}],[10,"cmc_delta_e","","In 1984 the CMC (Colour Measurement Committee of the Society of Dyes and Colourists of Great Britain) developed and adopted an equation based on LCH numbers.",34,{"inputs":[{"name":"self"},{"name":"cielab"},{"name":"f64"},{"name":"f64"}],"output":{"name":"f64"}}],[10,"desaturate","","amin, amax, bmin, bmax: boundaries of gamut rectangle",34,{"inputs":[{"name":"self"},{"name":"f64"},{"name":"f64"},{"name":"f64"},{"name":"f64"}],"output":{"name":"bool"}}],[10,"encoded","","Encodes a Lab value, from a CIELab value to ICC v4 convention.",34,null],[10,"encoded_v2","","Encodes a Lab value, from a CIELab value to ICC v2 convention.",34,null],[10,"from_encoded","","Decodes a Lab value, encoded on ICC v4 convention",34,null],[10,"from_encoded_v2","","Decodes a Lab value, encoded on ICC v2 convention",34,null],[10,"to_xyz","","Colorimetric space conversion.",34,{"inputs":[{"name":"self"},{"name":"ciexyz"}],"output":{"name":"ciexyz"}}],[8,"CacheFlag","","",null,null],[11,"fmt","","",13,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"d50","","",0,{"inputs":[],"output":{"name":"ciexyz"}}],[11,"default","","",0,{"inputs":[],"output":{"name":"ciexyz"}}],[11,"default","","",8,{"inputs":[],"output":{"name":"viewingconditions"}}],[11,"default","","",1,{"inputs":[],"output":{"name":"cielab"}}],[11,"eq","","",6,{"inputs":[{"name":"self"},{"name":"colorspacesignature"}],"output":{"name":"bool"}}],[11,"eq","","",4,{"inputs":[{"name":"self"},{"name":"tagsignature"}],"output":{"name":"bool"}}],[11,"eq","","",2,{"inputs":[{"name":"self"},{"name":"pixelformat"}],"output":{"name":"bool"}}],[11,"eq","","",7,{"inputs":[{"name":"self"},{"name":"profileclasssignature"}],"output":{"name":"bool"}}],[11,"eq","","",3,{"inputs":[{"name":"self"},{"name":"infotype"}],"output":{"name":"bool"}}],[11,"eq","","",1,{"inputs":[{"name":"self"},{"name":"cielab"}],"output":{"name":"bool"}}],[11,"ne","","",1,{"inputs":[{"name":"self"},{"name":"cielab"}],"output":{"name":"bool"}}],[11,"eq","","",0,{"inputs":[{"name":"self"},{"name":"ciexyz"}],"output":{"name":"bool"}}],[11,"ne","","",0,{"inputs":[{"name":"self"},{"name":"ciexyz"}],"output":{"name":"bool"}}],[11,"eq","","",5,{"inputs":[{"name":"self"},{"name":"intent"}],"output":{"name":"bool"}}],[11,"fmt","","",8,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",2,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",6,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",4,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",5,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",3,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",1,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"fmt","","",7,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"hash","","",4,null],[11,"hash","","",3,null],[11,"hash","","",7,null],[11,"hash","","",6,null],[11,"hash","","",5,null],[11,"from","","",0,{"inputs":[{"name":"ciexyy"}],"output":{"name":"ciexyz"}}],[11,"from","","",1,{"inputs":[{"name":"cielch"}],"output":{"name":"cielab"}}],[11,"clone","","",4,{"inputs":[{"name":"self"}],"output":{"name":"tagsignature"}}],[11,"clone","","",2,{"inputs":[{"name":"self"}],"output":{"name":"pixelformat"}}],[11,"clone","","",0,{"inputs":[{"name":"self"}],"output":{"name":"ciexyz"}}],[11,"clone","","",3,{"inputs":[{"name":"self"}],"output":{"name":"infotype"}}],[11,"clone","","",1,{"inputs":[{"name":"self"}],"output":{"name":"cielab"}}],[11,"clone","","",7,{"inputs":[{"name":"self"}],"output":{"name":"profileclasssignature"}}],[11,"clone","","",5,{"inputs":[{"name":"self"}],"output":{"name":"intent"}}],[11,"clone","","",6,{"inputs":[{"name":"self"}],"output":{"name":"colorspacesignature"}}],[11,"clone","","",8,{"inputs":[{"name":"self"}],"output":{"name":"viewingconditions"}}],[11,"float","","",2,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"optimized","","",2,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"colorspace","","",2,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"swapfirst","","",2,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"flavor","","",2,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"planar","","",2,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"endian16","","",2,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"doswap","","",2,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"extra","","",2,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"channels","","",2,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"bytes_per_channel","","",2,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"bytes_per_pixel","","",2,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}]],"paths":[[3,"CIEXYZ"],[3,"CIELab"],[4,"PixelFormat"],[4,"InfoType"],[4,"TagSignature"],[4,"Intent"],[4,"ColorSpaceSignature"],[4,"ProfileClassSignature"],[3,"ViewingConditions"],[3,"Flags"],[3,"StagesIter"],[3,"NamedColorInfo"],[4,"Error"],[4,"Tag"],[3,"Profile"],[3,"CIECAM02"],[3,"ThreadContext"],[3,"MLU"],[3,"MLURef"],[3,"NamedColorList"],[3,"NamedColorListRef"],[3,"Pipeline"],[3,"PipelineRef"],[3,"DisallowCache"],[3,"AllowCache"],[3,"Locale"],[3,"Stage"],[3,"StageRef"],[3,"Transform"],[3,"ToneCurve"],[3,"ToneCurveRef"],[8,"ColorSpaceSignatureExt"],[8,"CIEXYZExt"],[8,"CIExzYExt"],[8,"CIELabExt"]]};
initSearch(searchIndex);
